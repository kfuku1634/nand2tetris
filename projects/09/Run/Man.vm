function Man.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push constant 100
pop this 3
push constant 239
pop this 4
push this 4
pop this 0
push constant 480
pop this 7
push this 7
push constant 16
call Math.divide 2
pop this 1
push pointer 0
call Man.draw 1
pop temp 0
push pointer 0
return
function Man.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Man.draw 0
push argument 0
pop pointer 0
push this 0
push constant 32
call Math.multiply 2
push this 1
add
pop this 2
push constant 16384
push this 2
add
pop this 5
push this 5
push constant 0
add
push constant 2016
call Memory.poke 2
pop temp 0
push this 5
push constant 32
add
push constant 2016
call Memory.poke 2
pop temp 0
push this 5
push constant 64
add
push constant 2016
call Memory.poke 2
pop temp 0
push this 5
push constant 96
add
push constant 2016
call Memory.poke 2
pop temp 0
push this 5
push constant 128
add
push constant 384
call Memory.poke 2
pop temp 0
push this 5
push constant 160
add
push constant 384
call Memory.poke 2
pop temp 0
push this 5
push constant 192
add
push constant 2016
call Memory.poke 2
pop temp 0
push this 5
push constant 224
add
push constant 3576
call Memory.poke 2
pop temp 0
push this 5
push constant 256
add
push constant 14732
call Memory.poke 2
pop temp 0
push this 5
push constant 288
add
push constant 390
call Memory.poke 2
pop temp 0
push this 5
push constant 320
add
push constant 960
call Memory.poke 2
pop temp 0
push this 5
push constant 352
add
push constant 1632
call Memory.poke 2
pop temp 0
push this 5
push constant 384
add
push constant 2096
call Memory.poke 2
pop temp 0
push this 5
push constant 416
add
push constant 4120
call Memory.poke 2
pop temp 0
push this 5
push constant 448
add
push constant 24590
call Memory.poke 2
pop temp 0
push this 5
push constant 480
add
push constant 16381
neg
call Memory.poke 2
pop temp 0
push constant 0
return
function Man.erase 0
push argument 0
pop pointer 0
push this 0
push constant 32
call Math.multiply 2
push this 1
add
pop this 2
push constant 16384
push this 2
add
pop this 5
push this 5
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push this 5
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Man.Jump 0
push argument 0
pop pointer 0
push pointer 0
call Man.erase 1
pop temp 0
push this 0
push this 3
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
pop this 0
push constant 0
pop this 6
goto IF_END0
label IF_FALSE0
push this 0
push constant 1
sub
pop this 0
push constant 0
not
pop this 6
label IF_END0
push pointer 0
call Man.draw 1
pop temp 0
push constant 0
return
function Man.Fall 0
push argument 0
pop pointer 0
push pointer 0
call Man.erase 1
pop temp 0
push this 0
push constant 1
add
pop this 0
push this 4
push this 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
pop this 0
label IF_FALSE0
push constant 0
pop this 6
push pointer 0
call Man.draw 1
pop temp 0
push constant 0
return
function Man.can_jump 0
push argument 0
pop pointer 0
push this 0
push this 4
eq
push this 6
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Man.get_foot_pos 0
push argument 0
pop pointer 0
push this 0
return
function Man.get_ground_pos 0
push argument 0
pop pointer 0
push this 7
return
